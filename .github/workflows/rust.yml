name: Rust

permissions:
  pull-requests: write

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      # Required to provide source-based code coverage using LLVM
      - name: Install Clang
        run: sudo apt install clang -y

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features
        env:
          LLVM_PROFILE_FILE: "target/debug/silero.profraw"
          CARGO_INCREMENTAL: "0"
          RUSTFLAGS: "-Cinstrument-coverage"
          RUSTDOCFLAGS: "-Cinstrument-coverage"

      - name: Install LLVM Tools
        run: rustup component add llvm-tools-preview

      # Provisioning grcov explicitly to execute directly with the required args below
      - name: Install grcov
        run: cargo install grcov

      - name: Make the directory where Code Coverage will be stored
        run: mkdir target/debug/coverage

      - name: Gather Code Coverage
        run: |
          grcov . \
            --source-dir . \
            --binary-path ./target/debug \
            -t cobertura \
            --branch \
            --ignore-not-existing \
            --ignore "$HOME/.cargo/**" \
            --ignore "target/debug/build/**" \
            -o ./target/debug/coverage

      - name: Code Coverage Summary Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: 'target/debug/coverage/cobertura.xml'       
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: true
          hide_complexity: true
          indicators: true
          output: file
          thresholds: '60 80'

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md
